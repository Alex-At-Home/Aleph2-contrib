<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.ikanow.aleph2</groupId>
	<artifactId>aleph2_document_service_v1</artifactId>
	<version>${aleph2.version}</version>
	<properties>
		<aleph2.version>2.9.0</aleph2.version>
		<aleph2.scope>compile</aleph2.scope>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.googlecode.addjars-maven-plugin</groupId>
				<artifactId>addjars-maven-plugin</artifactId>
				<version>1.0.5</version>
				<executions>
					<execution>
						<goals>
							<goal>add-jars</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${basedir}/external_libs</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<sourceEncoding>UTF-8</sourceEncoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.2.201409121644</version>
				<configuration>
					<excludes>
						<!-- This actually removes code from coveralls.io -->
						<!-- Example: <exclude>**/path/to/package/*</exclude> -->
						<exclude>**/com/ikanow/aleph2/v1/document_db/utils/LegacyV1HadoopUtils*</exclude>
						<exclude>**/com/ikanow/aleph2/v1/document_db/modules/*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- execute using: mvn -e clean package shade:shade -Dmaven.test.skip=true -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<filters>
								<filter>
									<artifact>com.ikanow.aleph2:aleph2_document_service_v1-infinit.e.data_model.jar</artifact>
									<excludes>
										<!-- v1 data model and (v2) mongodb crud service have conflicting definitions for DBCollectionProxyFactory -->
										<exclude>com/mongodb/DBCollectionProxyFactory*</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.googlecode.addjars-maven-plugin</groupId>
										<artifactId>addjars-maven-plugin</artifactId>
										<versionRange>
											[1.0.5,)
										</versionRange>
										<goals>
											<goal>add-jars</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.2.201409121644,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>jdk.tools</groupId>
			<artifactId>jdk.tools</artifactId>
			<version>${java.version}</version>
			<scope>system</scope>
			<systemPath>${JAVA_HOME}/lib/tools.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>		
		<!-- Example of internal dependency (always need data model anyway) -->
		<dependency>
			<groupId>com.ikanow.aleph2</groupId>
			<artifactId>aleph2_data_model</artifactId>
			<version>${aleph2.version}</version>
			<scope>${aleph2.scope}</scope>
		</dependency>
		<dependency>
			<groupId>com.ikanow.aleph2</groupId>
			<artifactId>aleph2_core_shared_library</artifactId>
			<version>${aleph2.version}</version>
			<scope>${aleph2.scope}</scope>
		</dependency>
		<dependency>
			<groupId>com.ikanow.aleph2</groupId>
			<artifactId>aleph2_hadoop_dependencies</artifactId>
			<version>${aleph2.version}</version>
			<scope>${aleph2.scope}</scope>
		</dependency>
	 	<dependency>
	  		<groupId>com.ikanow.aleph2</groupId>
	  		<artifactId>aleph2_server_only_dependencies</artifactId>
	  		<version>${aleph2.version}</version>
			<scope>${aleph2.scope}</scope>  		
		</dependency>  	
		<!-- Other external dependencies here -->
		<dependency>
			<!-- This is then added to the shaded JAR's classpath via addjars plugin 
				above -->
			<groupId>com.ikanow.infinit.e</groupId>
			<artifactId>infinit.e.data_model</artifactId>
			<version>1.5</version>
			<scope>system</scope>
			<systemPath>${basedir}/external_libs/infinit.e.data_model.jar</systemPath>
		</dependency>
		<dependency>
			<!-- This is then added to the shaded JAR's classpath via addjars plugin 
				above -->
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-hadoop-core</artifactId>
			<version>1.0.0-unk</version>
			<scope>system</scope>
			<systemPath>${basedir}/external_libs/mongo-hadoop-core.jar</systemPath>
		</dependency>
	  	<dependency>
	  		<!-- This has provided scope since can only run in V1 mode which will always pass the v1 mgmt db into external apps -->
	  		<groupId>org.mongodb</groupId>
	  		<artifactId>mongo-java-driver</artifactId>
	  		<version>2.13.1</version>
	  		<scope>provided</scope>
	  	</dependency>
	</dependencies>
</project>
