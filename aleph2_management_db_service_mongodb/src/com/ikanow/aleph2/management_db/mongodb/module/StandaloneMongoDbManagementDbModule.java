/*******************************************************************************
 * Copyright 2015, The IKANOW Open Source Project.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package com.ikanow.aleph2.management_db.mongodb.module;

import java.util.Optional;

import org.checkerframework.checker.nullness.qual.Nullable;

import com.google.inject.AbstractModule;
import com.google.inject.Guice;
import com.google.inject.Inject;
import com.google.inject.Injector;
import com.google.inject.Scopes;
import com.ikanow.aleph2.data_model.interfaces.data_services.IManagementDbService;
import com.ikanow.aleph2.management_db.mongodb.services.MongoDbManagementDbService;

/** Module enabling the management_db_service to be run standalone for testing purposes
 * @author acp
 */
public class StandaloneMongoDbManagementDbModule extends AbstractModule {

	// (will have one of these 2 only)
	protected IManagementDbService _management_db_service;
	protected Injector _injector;
	
	/** Gets the injector generated by a call to the user constructor
	 * @return the guice injector
	 */
	@Nullable
	public Injector getInjector() {
		return _injector;
	}
	
	/** Default c'tor called by Guice
	 * @param management_db_service - the injected core management db service object
	 */
	@Inject
	protected StandaloneMongoDbManagementDbModule(final IManagementDbService management_db_service) {
		_management_db_service = management_db_service;
		
		//DEBUG
		//System.out.println("Hello world from: " + this.getClass() + ": management_db_service=" + management_db_service);		
	}

	/** User constructor, to create a standalone app based on this service, first create an injector
	 * @param is_mock - whether this is a mock or not
	 */
	public StandaloneMongoDbManagementDbModule(Optional<Boolean> is_mock) {
		if (is_mock.isPresent()) {
			
			_injector = Guice.createInjector(new StandaloneMongoDbManagementDbModule(Optional.empty()),
					is_mock.get() ? new MockMongoDbManagementDbModule() : new MongoDbManagementDbModule()
					);
			
			_injector.getInstance(StandaloneMongoDbManagementDbModule.class);
		}
	}

	/* (non-Javadoc)
	 * @see com.google.inject.AbstractModule#configure()
	 */
	@Override
	protected void configure() {	
		this.bind(IManagementDbService.class).to(MongoDbManagementDbService.class).in(Scopes.SINGLETON);
	}
	
}
